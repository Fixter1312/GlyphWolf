name: Auto Unzip Project

on:
  push:
    branches:
      - main
      - master
    # Uruchamiaj TYLKO, gdy w pushu jest jakiś ZIP (np. GlyphWolf_fixed.zip)
    paths:
      - "*.zip"
      - "**/*.zip"

permissions:
  contents: write  # potrzebne do commita/pusha

concurrency:
  group: unzip-${{ github.ref }}
  cancel-in-progress: false

jobs:
  unzip:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Znajdź ZIP do rozpakowania
        id: detect
        shell: bash
        run: |
          set -e
          ZIP_FILE=""
          # preferencyjnie szukamy GlyphWolf_fixed.zip, ale akceptujemy też dowolny .zip
          if [ -f "GlyphWolf_fixed.zip" ]; then
            ZIP_FILE="GlyphWolf_fixed.zip"
          else
            for f in *.zip **/*.zip; do
              [ -f "$f" ] || continue
              ZIP_FILE="$f"
              break
            done
          fi

          if [ -z "$ZIP_FILE" ]; then
            echo "found=false" >> "$GITHUB_OUTPUT"
            echo "No zip found."
            exit 0
          fi

          echo "found=true" >> "$GITHUB_OUTPUT"
          echo "zip=$ZIP_FILE" >> "$GITHUB_OUTPUT"
          echo "ZIP to extract: $ZIP_FILE"

      - name: Install unzip
        if: steps.detect.outputs.found == 'true'
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Unzip archive
        if: steps.detect.outputs.found == 'true'
        run: |
          unzip -o "${{ steps.detect.outputs.zip }}" -d .
          echo "✅ Extracted ${{ steps.detect.outputs.zip }}"

      - name: Remove ZIP after extraction
        if: steps.detect.outputs.found == 'true'
        run: rm -f "${{ steps.detect.outputs.zip }}"

      - name: Commit changes (exclude workflows)
        if: steps.detect.outputs.found == 'true'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Zastage’uj wszystkie zmiany...
          git add -A

          # ...ale NIE dodawaj plików workflow (to powodowało błąd z permissions)
          git reset .github/workflows || true
          git reset **/*.yml **/*.yaml || true

          git status --porcelain
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          ZIP="${{ steps.detect.outputs.zip }}"
          git commit -m "Auto-unzip: extracted ${ZIP} and removed archive"

      - name: Push changes
        if: steps.detect.outputs.found == 'true'
        run: git push
